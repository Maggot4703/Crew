# CSS - Examples and Code Samples

## Example 1: Basic CSS Styling - Simple Website Layout
```css
/* Basic HTML structure styling */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    line-height: 1.6;
    color: #333;
    background-color: #f4f4f4;
}

header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 1rem;
    text-align: center;
}

nav ul {
    list-style: none;
    display: flex;
    justify-content: center;
    background-color: #333;
}

nav li {
    margin: 0 1rem;
}

nav a {
    color: white;
    text-decoration: none;
    padding: 1rem;
    display: block;
    transition: background-color 0.3s ease;
}

nav a:hover {
    background-color: #555;
}

main {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 1rem;
}

.container {
    background: white;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}
```

## Example 2: CSS Grid Layout - Modern Responsive Design
```css
/* Modern CSS Grid layout for responsive design */
.grid-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    grid-gap: 2rem;
    padding: 2rem;
}

.grid-item {
    background: white;
    border-radius: 8px;
    padding: 1.5rem;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.grid-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 15px rgba(0,0,0,0.2);
}

/* Complex grid layout */
.dashboard {
    display: grid;
    grid-template-areas: 
        "header header header"
        "sidebar main main"
        "sidebar footer footer";
    grid-template-columns: 250px 1fr 1fr;
    grid-template-rows: 80px 1fr 60px;
    height: 100vh;
    gap: 1rem;
}

.header { grid-area: header; background: #2c3e50; }
.sidebar { grid-area: sidebar; background: #34495e; }
.main { grid-area: main; background: #ecf0f1; }
.footer { grid-area: footer; background: #95a5a6; }

/* Responsive grid */
@media (max-width: 768px) {
    .dashboard {
        grid-template-areas: 
            "header"
            "main"
            "sidebar"
            "footer";
        grid-template-columns: 1fr;
        grid-template-rows: 80px 1fr auto 60px;
    }
}
```

## Example 3: CSS Flexbox - Navigation and Card Layouts
```css
/* Flexbox navigation */
.navbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 2rem;
    background-color: #fff;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.nav-brand {
    font-size: 1.5rem;
    font-weight: bold;
    color: #2c3e50;
}

.nav-menu {
    display: flex;
    list-style: none;
    gap: 2rem;
}

.nav-menu a {
    text-decoration: none;
    color: #34495e;
    font-weight: 500;
    position: relative;
}

.nav-menu a::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    bottom: -5px;
    left: 0;
    background-color: #3498db;
    transition: width 0.3s ease;
}

.nav-menu a:hover::after {
    width: 100%;
}

/* Flexbox card layout */
.card-container {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    justify-content: center;
    padding: 2rem;
}

.card {
    flex: 0 1 300px;
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
}

.card:hover {
    transform: scale(1.05);
    box-shadow: 0 8px 20px rgba(0,0,0,0.15);
}
```

## Example 4: CSS Animations and Transitions
```css
/* Keyframe animations */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

@keyframes slideIn {
    from { transform: translateX(-100%); }
    to { transform: translateX(0); }
}

/* Animation classes */
.fade-in-up { animation: fadeInUp 0.6s ease-out; }
.pulse-animation { animation: pulse 2s infinite; }
.slide-in { animation: slideIn 0.5s ease-out; }

/* Interactive button animations */
.animated-button {
    position: relative;
    padding: 12px 24px;
    background: linear-gradient(45deg, #667eea, #764ba2);
    color: white;
    border: none;
    border-radius: 25px;
    cursor: pointer;
    overflow: hidden;
    transition: all 0.3s ease;
}

.animated-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    transition: left 0.5s;
}

.animated-button:hover::before {
    left: 100%;
}

.animated-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
}

/* Loading spinner */
.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid #f3f3f3;
    border-top: 4px solid #3498db;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
```

## Example 5: Advanced CSS - Custom Properties and Modern Features
```css
/* CSS Custom Properties (Variables) */
:root {
    --primary-color: #3498db;
    --secondary-color: #2ecc71;
    --danger-color: #e74c3c;
    --warning-color: #f39c12;
    --dark-color: #2c3e50;
    --light-color: #ecf0f1;
    
    --font-primary: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    --font-secondary: 'Courier New', Courier, monospace;
    
    --spacing-xs: 0.25rem;
    --spacing-sm: 0.5rem;
    --spacing-md: 1rem;
    --spacing-lg: 2rem;
    --spacing-xl: 3rem;
    
    --border-radius: 8px;
    --box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    --transition: all 0.3s ease;
}

/* Dark theme variables */
[data-theme="dark"] {
    --primary-color: #74b9ff;
    --secondary-color: #00b894;
    --background-color: #2d3436;
    --text-color: #ddd;
    --card-background: #636e72;
}

/* Using custom properties */
.theme-card {
    background-color: var(--card-background, white);
    color: var(--text-color, #333);
    padding: var(--spacing-lg);
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
    transition: var(--transition);
}

/* Modern CSS features */
.modern-card {
    background: white;
    border-radius: var(--border-radius);
    padding: var(--spacing-lg);
    
    /* Backdrop filter for glassmorphism */
    backdrop-filter: blur(10px);
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    
    /* CSS clamp for responsive typography */
    font-size: clamp(1rem, 2.5vw, 1.5rem);
    
    /* CSS min/max functions */
    width: min(100%, 500px);
    height: max(200px, 20vh);
    
    /* CSS logical properties */
    margin-inline: auto;
    padding-block: var(--spacing-md);
}
```

## Example 6: CSS Responsive Design and Media Queries
```css
/* Mobile-first responsive design */
.responsive-container {
    width: 100%;
    padding: 1rem;
}

/* Small devices (landscape phones, 576px and up) */
@media (min-width: 576px) {
    .responsive-container {
        max-width: 540px;
        margin: 0 auto;
    }
    
    .col-sm-6 { width: 50%; float: left; }
}

/* Medium devices (tablets, 768px and up) */
@media (min-width: 768px) {
    .responsive-container {
        max-width: 720px;
    }
    
    .col-md-4 { width: 33.333%; float: left; }
    .col-md-8 { width: 66.666%; float: left; }
}

/* Large devices (desktops, 992px and up) */
@media (min-width: 992px) {
    .responsive-container {
        max-width: 960px;
    }
    
    .col-lg-3 { width: 25%; float: left; }
}

/* Extra large devices (large desktops, 1200px and up) */
@media (min-width: 1200px) {
    .responsive-container {
        max-width: 1140px;
    }
}

/* Responsive typography */
.responsive-text {
    font-size: clamp(1rem, 4vw, 2rem);
    line-height: clamp(1.2, 5vw, 1.8);
}

/* Responsive images */
.responsive-image {
    max-width: 100%;
    height: auto;
    object-fit: cover;
}

/* Dark mode preference */
@media (prefers-color-scheme: dark) {
    body {
        background-color: #1a1a1a;
        color: #ffffff;
    }
    
    .card {
        background-color: #2d2d2d;
        border-color: #404040;
    }
}

/* Reduced motion preference */
@media (prefers-reduced-motion: reduce) {
    *, *::before, *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}
```

## Example 7: CSS Architecture - BEM Methodology
```css
/* BEM (Block Element Modifier) Methodology */

/* Block */
.button {
    display: inline-block;
    padding: 12px 24px;
    border: none;
    border-radius: 4px;
    font-size: 16px;
    font-weight: 500;
    text-align: center;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.3s ease;
    background-color: #007bff;
    color: white;
}

/* Element */
.button__icon {
    margin-right: 8px;
    font-size: 14px;
}

.button__text {
    display: inline-block;
}

/* Modifiers */
.button--primary { background-color: #007bff; color: white; }
.button--secondary { background-color: #6c757d; color: white; }
.button--success { background-color: #28a745; color: white; }
.button--danger { background-color: #dc3545; color: white; }
.button--large { padding: 16px 32px; font-size: 18px; }
.button--small { padding: 8px 16px; font-size: 14px; }
.button--disabled { opacity: 0.6; cursor: not-allowed; pointer-events: none; }

/* Complex component example */
.card {
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    overflow: hidden;
}

.card__header {
    padding: 16px;
    background-color: #f8f9fa;
    border-bottom: 1px solid #dee2e6;
}

.card__title {
    margin: 0;
    font-size: 18px;
    font-weight: 600;
    color: #333;
}

.card__body {
    padding: 16px;
}

.card__footer {
    padding: 16px;
    background-color: #f8f9fa;
    border-top: 1px solid #dee2e6;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

/* Modifier for card variants */
.card--elevated { box-shadow: 0 4px 8px rgba(0,0,0,0.15); }
.card--outlined { border: 1px solid #dee2e6; box-shadow: none; }
.card--horizontal { display: flex; }

/* Utility classes */
.u-margin-top-small { margin-top: 8px; }
.u-margin-top-medium { margin-top: 16px; }
.u-margin-top-large { margin-top: 24px; }
.u-text-center { text-align: center; }
.u-text-left { text-align: left; }
.u-text-right { text-align: right; }
.u-hidden { display: none; }
.u-visible { display: block; }
```

## Usage Notes:
- **Example 1**: Basic CSS fundamentals including selectors, layout, and styling
- **Example 2**: Modern CSS Grid for complex responsive layouts
- **Example 3**: Flexbox for navigation and card-based designs
- **Example 4**: CSS animations, transitions, and interactive effects
- **Example 5**: Advanced features like custom properties and modern CSS functions
- **Example 6**: Comprehensive responsive design with media queries and accessibility
- **Example 7**: Professional CSS architecture using BEM methodology

These examples progress from basic styling to advanced CSS techniques used in modern web development.